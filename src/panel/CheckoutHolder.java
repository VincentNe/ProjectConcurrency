package panel;

import domain.CheckoutHelper;
import javafx.scene.control.ProgressBar;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;

public class CheckoutHolder extends JComponent {
    private JProgressBar progressBar1;
    private JPanel CheckoutHoulder;
    private JLabel LblName;
    private JLabel LblSize;
    private JLabel LblAvgUtilization;
    private JButton openButton;

    private final String openButtonText = "Close";
    private final String closeButtonText = "Open";
    private DecimalFormat avgUtilizationFormatter = new DecimalFormat(".##");
    private UIController uiController;

    public CheckoutHolder(String name, int size) {
        $$$setupUI$$$();
        uiController = UIController.UIControllerinstance();
        LblName.setText(name);
        LblSize.setText(Integer.toString(size));
        progressBar1.setMinimum(0);
        progressBar1.setMaximum(10);
        openButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (openButton.getText().equals(openButtonText)) {
                    uiController.closeCheckout(LblName.getText());
                    openButton.setText(closeButtonText);
                    CheckoutHoulder.setBackground(new Color(-881014));
                } else {
                    uiController.openCheckout(LblName.getText());
                    openButton.setText(openButtonText);
                    CheckoutHoulder.setBackground(new Color(-5049649));

                }

            }
        });
    }

    public void updateQueueSize(int size) {
        System.out.println("UI: Update Queue Size: " + size);
        LblSize.setText(Integer.toString(size));


        LblSize.revalidate();

    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    public void setStats(CheckoutHelper checkoutHelper) {

        LblAvgUtilization.setText(avgUtilizationFormatter.format(checkoutHelper.avgUtilizationTime() * 100) + "%");
        LblAvgUtilization.revalidate();
    }

    public void updateCheckoutScanningProcess(int currentItem, int totalCustomerItems) {
        progressBar1.setMaximum(totalCustomerItems);
        progressBar1.setValue(currentItem);
        progressBar1.revalidate();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        CheckoutHoulder = new JPanel();
        CheckoutHoulder.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(5, 2, new Insets(0, 0, 0, 0), -1, -1));
        CheckoutHoulder.setBackground(new Color(-881014));
        CheckoutHoulder.setOpaque(true);
        CheckoutHoulder.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, new Color(-14849349)));
        progressBar1 = new JProgressBar();
        CheckoutHoulder.add(progressBar1, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Name:");
        CheckoutHoulder.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Queue Size:");
        CheckoutHoulder.add(label2, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        LblSize = new JLabel();
        LblSize.setText("0");
        CheckoutHoulder.add(LblSize, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        LblName = new JLabel();
        LblName.setText("NAME HOLDER");
        CheckoutHoulder.add(LblName, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Client Progress");
        CheckoutHoulder.add(label3, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("AvgUtilization:");
        CheckoutHoulder.add(label4, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        LblAvgUtilization = new JLabel();
        LblAvgUtilization.setText("0%");
        CheckoutHoulder.add(LblAvgUtilization, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        openButton = new JButton();
        openButton.setText("Open");
        CheckoutHoulder.add(openButton, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return CheckoutHoulder;
    }
}
