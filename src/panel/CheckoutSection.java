package panel;

import domain.CheckoutHelper;

import javax.swing.*;
import java.awt.*;
import java.util.HashMap;
import java.util.Map;

public class CheckoutSection extends JComponent {
    private JPanel holder;
    private JPanel checkoutsPanel;
    private UIController uiController;
    private Map<String, CheckoutHolder> checkouts;

    public CheckoutSection() {
        checkouts = new HashMap<>();
        uiController = UIController.UIControllerinstance();
        uiController.addCheckoutSection(this);
    }

    public void addCheckout(String UID) {
        System.out.println("Add Checkout To checkout sectiojn");
        CheckoutHolder holderTemp = new CheckoutHolder(UID, 0);
        checkouts.put(UID, holderTemp);
        checkoutsPanel.add(holderTemp.$$$getRootComponent$$$());
        checkoutsPanel.revalidate();

    }

    public synchronized void addCheckoutStatistics(HashMap<String, CheckoutHelper> checkoutStatistics) {
        synchronized (checkouts) {
            for (String checkoutName : checkoutStatistics.keySet()) {
                if (checkouts.get(checkoutName) != null)
                    checkouts.get(checkoutName).setStats(checkoutStatistics.get(checkoutName));
            }
        }

    }

    public void setCheckoutQueueSize(String UID, int size) {
        CheckoutHolder checkoutHolder = checkouts.get(UID);
        if (checkoutHolder != null) {
            checkoutHolder.updateQueueSize(size);
        } else {
            throw new NullPointerException("chechoutHolder Not Found");
        }

    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }


    public void updateCheckoutScanningProcess(String checkoutLabel, int currentItem, int totalCustomerItems) {
        checkouts.get(checkoutLabel).updateCheckoutScanningProcess(currentItem, totalCustomerItems);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        holder = new JPanel();
        holder.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        holder.setMinimumSize(new Dimension(500, 200));
        holder.setPreferredSize(new Dimension(500, 200));
        final JScrollPane scrollPane1 = new JScrollPane();
        holder.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        checkoutsPanel = new JPanel();
        checkoutsPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        checkoutsPanel.setOpaque(false);
        checkoutsPanel.setPreferredSize(new Dimension(500, 400));
        scrollPane1.setViewportView(checkoutsPanel);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return holder;
    }
}
